import cv2 as cv
import os
import tensorflow
import keras
from keras.models import load_model
import numpy as np
from pygame import mixer
import time

#Class
class DrowsinessDetector:
    def  _init_(self):
        mixer.init()
        self.sound = mixer.Sound("alarm.wav")

        self.cam = cv.VideoCapture(0)
        self.font = cv. FONT_HERSHEY_COMPLEX_SMALL
        self.label = None

        self.model= load_model('models/cnncat2.h5')
        self.score = 0
        self.rpred=[]
        self.lpred=[]
        self.r_eye_label = None
        self.l_eye_label = None
        self.thick = 2

        self.face_classifier = cv.CascadeClassifier('haar cascade files\haarcascade_frontalface_alt.xml')
        self.leye_classifier = cv.CascadeClassifier('haar cascade files\haarcascade_lefteye_2splits.xml')
        self.reye_classifier = cv.CascadeClassifier('haar cascade files\haarcascade_righteye_2splits.xml')

    def process_eyes(self, eye):
        eye = cv.cvtColor(eye,cv.COLOR_BGR2GRAY)
        eye = cv.resize(eye(24,24))
        eye = eye/255
        eye = eye.reshape(24,24,-1)
        eye = np.expand_dims(eye, axis = 0)

        return eye

    def predict(self,eye):
        axis = 1

        prediction = self.model.predict(eye)
        prediction = np.argmax(prediction,axis=axis)

        if(prediction[0]==1):
            self.label="Open"
        if(prediction[0]==0):
            self.label="Closed"
        
        return self.label




